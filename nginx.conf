# Sanaa AI Development Assistant - Nginx Configuration
# Domain: ai.sanaa.co
# Reverse proxy for FastAPI application running on port 9999

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:;" always;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=websocket:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=static:10m rate=100r/m;

    # Upstream backend (Sanaa FastAPI application)
    upstream sanaa_backend {
        server 127.0.0.1:9999;
        keepalive 32;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name ai.sanaa.co www.ai.sanaa.co;
        return 301 https://$server_name$request_uri;
    }

    # Main HTTPS server block
    server {
        listen 443 ssl http2;
        server_name ai.sanaa.co www.ai.sanaa.co;

        # SSL Configuration (Let's Encrypt)
        ssl_certificate /etc/letsencrypt/live/ai.sanaa.co/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ai.sanaa.co/privkey.pem;

        # SSL Security settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Root directory and index
        root /opt/coding-swarm/web;
        index index.html;

        # Static files with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            limit_req zone=static burst=20 nodelay;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status $upstream_cache_status;

            # Try static files first, then proxy to backend
            try_files $uri @proxy;
        }

        # API endpoints
        location /api/ {
            limit_req zone=api burst=10 nodelay;

            proxy_pass http://sanaa_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;

            # WebSocket support for API
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Timeout settings
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffer settings for large responses
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # WebSocket connections
        location /ws/ {
            limit_req zone=websocket burst=50 nodelay;

            proxy_pass http://sanaa_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket specific timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # Authentication endpoints (stricter rate limiting)
        location ~ ^/(auth|login|register)/ {
            limit_req zone=auth burst=5 nodelay;

            proxy_pass http://sanaa_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://sanaa_backend/health;
            proxy_set_header Host $host;

            # Cache health checks for 30 seconds
            proxy_cache health_cache;
            proxy_cache_valid 200 30s;
            proxy_cache_use_stale error timeout invalid_header updating;
        }

        # Main application (SPA fallback)
        location / {
            try_files $uri $uri/ /index.html;

            # Proxy to backend for dynamic content
            proxy_pass http://sanaa_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # SPA support - don't cache HTML
            location ~* \.html$ {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
            }
        }

        # Security: Block access to sensitive files
        location ~ /\.(env|git|htaccess|htpasswd|config)$ {
            deny all;
            return 404;
        }

        # Block access to Python files
        location ~ \.py$ {
            deny all;
            return 404;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
    }

    # Cache configurations
    proxy_cache_path /var/cache/nginx/health levels=1:2 keys_zone=health_cache:1m max_size=10m inactive=1h use_temp_path=off;
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=30m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=500m inactive=1h use_temp_path=off;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'cache="$upstream_cache_status"';

    log_format security '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'blocked="$blocked"';

    access_log /var/log/nginx/sanaa_access.log main;
    error_log /var/log/nginx/sanaa_error.log warn;

    # Additional security measures
    # Block common exploit attempts
    location ~* \.(php|asp|jsp)$ {
        deny all;
        return 404;
    }

    # Rate limit brute force attempts
    location ~* /(wp-admin|wp-login|admin|login|phpmyadmin) {
        limit_req zone=auth burst=3 nodelay;
        deny all;
        return 444;
    }
}